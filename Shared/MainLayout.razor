@inherits LayoutComponentBase
@inject Toolbelt.Blazor.I18nText.I18nText I18nText



<div class="sidebar">
    <NavMenu />
</div>


<div class="main">
    <div class="top-row px-4">
        <a href="http://blazor.net" target="_blank" class="ml-md-auto">@Text.About</a>
    </div>

    <div class="content px-4">
        <CascadingValue Value="CurrentLang">
            @Body
        </CascadingValue>
       
        <div class="footer">
            <div class="form-row align-items-center text-muted px-4">
                <div class="col"></div>
                <div class="col-auto">
                    <span class="oi oi-globe" aria-hidden="true"></span>
                </div>
                <div class="col-auto">
                    <select class="form-control form-control-sm" @onchange="OnChangeCurrentLang">
                        <option value="en" selected="@(CurrentLang == "en")">English</option>
                        <option value="tr" selected="@(CurrentLang == "tr")">Türkçe</option>
                    </select>
                </div>
            </div>
        </div>
    </div>
</div>


@code{

    private string CurrentLang;
    public I18nText.Text Text = new I18nText.Text();

    protected async override Task OnInitializedAsync()
    {
        var lang = (await I18nText.GetCurrentLanguageAsync()).Split('-')[0];
        if (new[] { "en", "tr" }.Contains(lang))
        {
            CurrentLang = lang;
        }
        else
        {
            CurrentLang = "en";
        }
        Text = await I18nText.GetTextTableAsync<I18nText.Text>(this);
    }

    private async Task OnChangeCurrentLang(ChangeEventArgs args)
    {
        Console.WriteLine($"OnChange: {args.Value}");
        await I18nText.SetCurrentLanguageAsync(CurrentLang);
        CurrentLang = args.Value as string;

    }
}